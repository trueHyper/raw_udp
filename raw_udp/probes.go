package raw_udp

import (
	"fmt"
	"sort"
)

var (
	// сюда можно написать сеты, по которым будет скан, и выбирать их через флаг --set <название>
	// с помощью флага --custom можно добавить сет из консоли, например --custom="proto1 ptoto2 proto3"
	// таким образом скан будет по пэйлоадам от этих протоколов, сами payloadы находятся в мапе _payload_
	Sets = map[string][]string{
		"set1": {"snmpv1", "snmpv2", "snmpv3", "ntp", "dns"},
		"set2": {"snmpv1", "snmpv2", "snmpv3", "ntp", "dns", "netbios", "tftp", "upnp"},
		//...
	}

	// port number : {array of protocols} ( 161:{"snmpv1", "snmpv2", "snmpv3"} )
	LoadedPorts = make(map[int][]string, len(_payload_))

	// all ports from _payload_ (sorted)
	SortedPorts = make([]int, 0, len(_payload_))
)

const (
	Default = "default"
)

type Payload struct {
	Port uint16
	Data []byte
}

// this func called in init (scanner.go)
// needed for flag --use_ports
func _build_ports_map() {
	for name, payload := range _payload_ {
		port := payload.Port
		if port == 0 || name == Default {
			continue
		}
		LoadedPorts[int(port)] = append(LoadedPorts[int(port)], name)
	}
}

// this func called in init (scanner.go)
// needed for flag --use_ports
// SortedPorts are used to find nearest similar port (if exist)
func _build_sorted_ports_arr() {
	for _, payload := range _payload_ {
		SortedPorts = append(SortedPorts, int(payload.Port))
	}
	sort.Ints(SortedPorts)
}

// for example, host=145.43.32.12 port=162
// maybe it's snmp on another port?
// this function checks if there is a similar port
func GetNearbyPort(target int) (int, error) {
	var (
		left  = 0
		right = len(SortedPorts) - 1
		out   = SortedPorts[0]

		abs = func(x int) int {
			if x < 0 {
				return -x
			}
			return x
		}
	)

	for left <= right {
		mid := (left + right) / 2

		if abs(SortedPorts[mid]-target) < abs(out-target) {
			out = SortedPorts[mid]
		}

		if SortedPorts[mid] < target {
			left = mid + 1
		} else {
			right = mid - 1
		}
	}

	// if difference between target(original port) and out >3 -> nearby port not found
	if abs(target-out) > 3 {
		return -1, fmt.Errorf("nearby port not found: out is %d", out)
	}
	return out, nil
}

/*
main source of probes: https://github.com/zmap/zmap/blob/main/examples/udp-probes
*/
var _payload_ = map[string]Payload{
	"default": {
		Port: 0,
		Data: []byte(" \n\n"),
	},

	"snmpv1": {
		Port: 161,
		Data: []byte{
			/*
				SOURCE: snmpget -v1 -d -c public 149.126.170.161 \
				1.3.6.1.2.1.1.1.0 \
				1.3.6.1.2.1.1.5.0 \
				1.3.6.1.2.1.1.6.0 \
				1.3.6.1.2.1.1.4.0
			*/
			0x30, 0x53, 0x02, 0x01, 0x00, 0x04, 0x06, 0x70, 0x75, 0x62, 0x6C, 0x69,
			0x63, 0xA0, 0x46, 0x02, 0x04, 0x00, 0x9E, 0xE5, 0x2F, 0x02, 0x01, 0x00,
			0x02, 0x01, 0x00, 0x30, 0x38, 0x30, 0x0C, 0x06, 0x08, 0x2B, 0x06, 0x01,
			0x02, 0x01, 0x01, 0x01, 0x00, 0x05, 0x00, 0x30, 0x0C, 0x06, 0x08, 0x2B,
			0x06, 0x01, 0x02, 0x01, 0x01, 0x05, 0x00, 0x05, 0x00, 0x30, 0x0C, 0x06,
			0x08, 0x2B, 0x06, 0x01, 0x02, 0x01, 0x01, 0x06, 0x00, 0x05, 0x00, 0x30,
			0x0C, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x02, 0x01, 0x01, 0x04, 0x00, 0x05,
			0x00,
		},
	},

	"snmpv2": {
		Port: 161,
		Data: []byte{
			/*
				SOURCE: snmpget -d -v2c -c public 149.126.99.123 \
				1.3.6.1.2.1.1.5.0 \
				1.3.6.1.2.1.1.1.0 \
				1.3.6.1.2.1.1.6.0 \
				1.3.6.1.2.1.1.4.0
			*/
			0x30, 0x53, 0x02, 0x01, 0x01, 0x04, 0x06, 0x70, 0x75, 0x62, 0x6C, 0x69,
			0x63, 0xA0, 0x46, 0x02, 0x04, 0x7D, 0x13, 0x50, 0xEE, 0x02, 0x01, 0x00,
			0x02, 0x01, 0x00, 0x30, 0x38, 0x30, 0x0C, 0x06, 0x08, 0x2B, 0x06, 0x01,
			0x02, 0x01, 0x01, 0x05, 0x00, 0x05, 0x00, 0x30, 0x0C, 0x06, 0x08, 0x2B,
			0x06, 0x01, 0x02, 0x01, 0x01, 0x01, 0x00, 0x05, 0x00, 0x30, 0x0C, 0x06,
			0x08, 0x2B, 0x06, 0x01, 0x02, 0x01, 0x01, 0x06, 0x00, 0x05, 0x00, 0x30,
			0x0C, 0x06, 0x08, 0x2B, 0x06, 0x01, 0x02, 0x01, 0x01, 0x04, 0x00, 0x05,
			0x00,
		},
	},

	"snmpv3": {
		Port: 161,
		Data: []byte{
			0x30, 0x3D, 0x02, 0x01, 0x03, 0x30, 0x10, 0x02, 0x04, 0x4F, 0x97, 0x49,
			0xB8, 0x02, 0x02, 0x05, 0xC0, 0x04, 0x01, 0x04, 0x02, 0x01, 0x03, 0x04,
			0x10, 0x30, 0x0E, 0x04, 0x00, 0x02, 0x01, 0x00, 0x02, 0x01, 0x00, 0x04,
			0x00, 0x04, 0x00, 0x04, 0x00, 0x30, 0x14, 0x04, 0x00, 0x04, 0x00, 0xA0,
			0x0E, 0x02, 0x04, 0x5D, 0xDB, 0x28, 0xD6, 0x02, 0x01, 0x00, 0x02, 0x01,
			0x00, 0x30, 0x00,
		},
	},

	"ntp": {
		Port: 123,
		Data: []byte{
			0xE3, 0x00, 0x04, 0xFA, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0xC5, 0x4D, 0x23, 0x4B, 0x71, 0xB1, 0x52, 0xF3,
		},
	},

	"ntp_monlist": {
		Port: 123,
		Data: []byte{
			0x17, 0x00, 0x03, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
	},

	"dns": {
		Port: 53,
		Data: []byte{
			0x34, 0xEF, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x07, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4F, 0x4E, 0x04, 0x42, 0x49, 0x4E,
			0x44, 0x00, 0x00, 0x10, 0x00, 0x03,
		},
	},

	"dns_google_it": {
		Port: 53,
		Data: []byte{
			0x4B, 0x05, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x03, 0x77, 0x77, 0x77, 0x06, 0x67, 0x6F, 0x6F, 0x67, 0x6C, 0x65, 0x02,
			0x69, 0x74, 0x00, 0x00, 0x01, 0x00, 0x01,
		},
	},

	"dns_google_com": {
		Port: 53,
		Data: []byte{
			0xAE, 0x0D, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x03, 0x77, 0x77, 0x77, 0x06, 0x67, 0x6F, 0x6F, 0x67, 0x6C, 0x65, 0x03,
			0x63, 0x6F, 0x6D, 0x00, 0x00, 0x01, 0x00, 0x01,
		},
	},

	"netbios": {
		Port: 137,
		Data: []byte{
			0xE5, 0xD8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x20, 0x43, 0x4B, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41,
			0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41,
			0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x00, 0x00, 0x21,
			0x00, 0x01,
		},
	},

	"ard": {
		Port: 3283,
		Data: []byte{
			0x00, 0x14, 0x00, 0x01, 0x03,
		},
	},

	"bacnet": {
		Port: 47808,
		Data: []byte{
			0x81, 0x0A, 0x00, 0x11, 0x01, 0x04, 0x00, 0x05, 0xD6, 0x0C, 0x0C, 0x02,
			0x3F, 0xFF, 0xFF, 0x19, 0x4B, 0x4C,
		},
	},

	"bacnet_rpm": {
		Port: 47808,
		Data: []byte{
			0x81, 0x0A, 0x00, 0x25, 0x01, 0x04, 0x02, 0x05, 0x01, 0x0E, 0x0C, 0x02,
			0x00, 0x00, 0x00, 0x1E, 0x09, 0x0C, 0x09, 0x1C, 0x09, 0x2C, 0x09, 0x38,
			0x09, 0x39, 0x09, 0x3A, 0x09, 0x46, 0x09, 0x4D, 0x09, 0x78, 0x09, 0x79,
			0x1F,
		},
	},

	"blank_space": {
		Port: 0,
		Data: []byte{
			0x20,
		},
	},

	"chargen": {
		Port: 19,
		Data: []byte{
			0x01,
		},
	},

	"citrix": {
		Port: 1604,
		Data: []byte{
			0x1E, 0x00, 0x01, 0x30, 0x02, 0xFD, 0xA8, 0xE3, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
	},

	"coap": {
		Port: 5683,
		Data: []byte{
			0x40, 0x01, 0x7D, 0x70, 0xBB, 0x2E, 0x77, 0x65, 0x6C, 0x6C, 0x2D, 0x6B,
			0x6E, 0x6F, 0x77, 0x6E, 0x04, 0x63, 0x6F, 0x72, 0x65,
		},
	},

	"db2": {
		Port: 523,
		Data: []byte{
			0x44, 0x42, 0x32, 0x47, 0x45, 0x54, 0x41, 0x44, 0x44, 0x52, 0x00, 0x53,
			0x51, 0x4C, 0x30, 0x39, 0x30, 0x31, 0x30, 0x00,
		},
	},

	"db2disco": {
		Port: 523,
		Data: []byte{
			0x44, 0x42, 0x32, 0x47, 0x45, 0x54, 0x41, 0x44, 0x44, 0x52, 0x00, 0x53,
			0x51, 0x4C, 0x30, 0x35, 0x30, 0x30, 0x30, 0x00,
		},
	},

	"digi1": {
		Port: 2362,
		Data: []byte{
			0x44, 0x49, 0x47, 0x49, 0x00, 0x01, 0x00, 0x06, 0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF,
		},
	},

	"digi2": {
		Port: 2362,
		Data: []byte{
			0x44, 0x56, 0x4B, 0x54, 0x00, 0x01, 0x00, 0x06, 0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF,
		},
	},

	"digi3": {
		Port: 2362,
		Data: []byte{
			0x44, 0x47, 0x44, 0x50, 0x00, 0x01, 0x00, 0x06, 0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF,
		},
	},

	"dtls": {
		Port: 443,
		Data: []byte{
			0x16, 0xFE, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x66, 0x01, 0x00, 0x00, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x5A, 0xFE, 0xFD, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5,
			0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5,
			0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0xA5, 0x00,
			0x00, 0x00, 0x32, 0xC0, 0x2C, 0xCC, 0xA9, 0xC0, 0xAD, 0xC0, 0x0A, 0xC0,
			0x2B, 0xC0, 0xAC, 0xC0, 0x09, 0xC0, 0x30, 0xCC, 0xA8, 0xC0, 0x14, 0xC0,
			0x2F, 0xC0, 0x13, 0x00, 0x9D, 0xC0, 0x9D, 0x00, 0x35, 0x00, 0x9C, 0xC0,
			0x9C, 0x00, 0x2F, 0x00, 0x9F, 0xCC, 0xAA, 0xC0, 0x9F, 0x00, 0x39, 0x00,
			0x9E, 0xC0, 0x9E, 0x00, 0x33, 0x01, 0x00,
		},
	},

	"ipmi": {
		Port: 623,
		Data: []byte{
			0x06, 0x00, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x09, 0x20, 0x18, 0xC8, 0x81, 0x00, 0x38, 0x8E, 0x04, 0xB5,
		},
	},

	"ldap": {
		Port: 389,
		Data: []byte{
			0x30, 0x84, 0x00, 0x00, 0x00, 0x2D, 0x02, 0x01, 0x01, 0x63, 0x84, 0x00,
			0x00, 0x00, 0x24, 0x04, 0x00, 0x0A, 0x01, 0x00, 0x0A, 0x01, 0x00, 0x02,
			0x01, 0x00, 0x02, 0x01, 0x00, 0x01, 0x01, 0x00, 0x87, 0x0B, 0x6F, 0x62,
			0x6A, 0x65, 0x63, 0x74, 0x63, 0x6C, 0x61, 0x73, 0x73, 0x30, 0x84, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x0A,
		},
	},

	"mdns": {
		Port: 5353,
		Data: []byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x09, 0x5F, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x07, 0x5F,
			0x64, 0x6E, 0x73, 0x2D, 0x73, 0x64, 0x04, 0x5F, 0x75, 0x64, 0x70, 0x05,
			0x6C, 0x6F, 0x63, 0x61, 0x6C, 0x00, 0x00, 0x0C, 0x00, 0x01,
		},
	},

	"memcache": {
		Port: 11211,
		Data: []byte{
			0x5A, 0x4D, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x73, 0x74, 0x61, 0x74,
			0x73, 0x20, 0x69, 0x74, 0x65, 0x6D, 0x73, 0x0D, 0x0A,
		},
	},

	"mssql": {
		Port: 1434,
		Data: []byte{
			0x02,
		},
	},

	"_natpmp_": {
		Port: 5351,
		Data: []byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0xE3, 0xB3, 0xE4, 0x83,
		},
	},

	"natpmp": {
		Port: 5351,
		Data: []byte{
			0x00, 0x00, 0x00, 0x00,
		},
	},

	"netis": {
		Port: 53413,
		Data: []byte{
			0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x9E, 0x21, 0xBD, 0xAD,
		},
	},

	"newline": {
		Port: 0,
		Data: []byte{
			0x0A,
		},
	},

	"null_byte": {
		Port: 0,
		Data: []byte{
			0x00,
		},
	},

	"pca_nq": {
		Port: 5632,
		Data: []byte{
			0x4E, 0x51,
		},
	},

	"pca_st": {
		Port: 5632,
		Data: []byte{
			0x53, 0x54,
		},
	},

	"pcanywhere": {
		Port: 5632,
		Data: []byte{
			0x4E, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x41, 0xF4, 0xBF, 0xA6,
		},
	},

	"portmap": {
		Port: 111,
		Data: []byte{
			0x1A, 0xA9, 0xFF, 0xE1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
			0x00, 0x01, 0x86, 0xA0, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00,
		},
	},

	// This probe triggers a response from Quote of the Day services on UDP port 17
	"qotd": {
		Port: 17,
		Data: []byte{
			0x0D, 0x0A,
		},
	},

	"quic": {
		Port: 443,
		Data: []byte{
			0xC0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x14, 0x01, 0x44, 0xF6, 0x35, 0x99,
			0xDE, 0xD1, 0x55, 0x97, 0x45, 0x0B, 0x35, 0xFA, 0xDE, 0xD3, 0x34, 0x94,
			0x06, 0xCE, 0x9A, 0x00, 0x40, 0x20, 0xA1, 0x88, 0xB8, 0x3E, 0x00, 0xEA,
			0xFB, 0x5B, 0xD0, 0x79, 0x54, 0x4B, 0x09, 0x18, 0xCF, 0xB5, 0x2A, 0xC4,
			0xD8, 0xF3, 0x02, 0xE7, 0x41, 0xB4, 0x71, 0xE0, 0x8F, 0x34, 0x83, 0xDF,
			0xF4, 0xE3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
	},

	"rdp": {
		Port: 3389,
		Data: []byte{
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x54, 0x06,
		},
	},

	"ripv1": {
		Port: 520,
		Data: []byte{
			0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
		},
	},

	"sentinel": {
		Port: 5093,
		Data: []byte{
			0x7A, 0x00, 0x00, 0x00, 0x00, 0x00,
		},
	},

	"sip": {
		Port: 5060,
		Data: []byte{
			0x4F, 0x50, 0x54, 0x49, 0x4F, 0x4E, 0x53,
		},
	},

	"sip_options": {
		Port: 5060,
		Data: []byte{
			0x4F, 0x50, 0x54, 0x49, 0x4F, 0x4E, 0x53, 0x20, 0x73, 0x69, 0x70, 0x3A,
			0x24, 0x7B, 0x52, 0x41, 0x4E, 0x44, 0x5F, 0x41, 0x4C, 0x50, 0x48, 0x41,
			0x3D, 0x38, 0x7D, 0x40, 0x24, 0x7B, 0x44, 0x41, 0x44, 0x44, 0x52, 0x7D,
			0x20, 0x53, 0x49, 0x50, 0x2F, 0x32, 0x2E, 0x30, 0x0D, 0x0A, 0x56, 0x69,
			0x61, 0x3A, 0x20, 0x53, 0x49, 0x50, 0x2F, 0x32, 0x2E, 0x30, 0x2F, 0x55,
			0x44, 0x50, 0x20, 0x24, 0x7B, 0x53, 0x41, 0x44, 0x44, 0x52, 0x7D, 0x3A,
			0x24, 0x7B, 0x53, 0x50, 0x4F, 0x52, 0x54, 0x7D, 0x3B, 0x62, 0x72, 0x61,
			0x6E, 0x63, 0x68, 0x3D, 0x24, 0x7B, 0x52, 0x41, 0x4E, 0x44, 0x5F, 0x41,
			0x4C, 0x50, 0x48, 0x41, 0x3D, 0x36, 0x7D, 0x2E, 0x24, 0x7B, 0x52, 0x41,
			0x4E, 0x44, 0x5F, 0x44, 0x49, 0x47, 0x49, 0x54, 0x3D, 0x31, 0x30, 0x7D,
			0x3B, 0x72, 0x70, 0x6F, 0x72, 0x74, 0x3B, 0x61, 0x6C, 0x69, 0x61, 0x73,
			0x0D, 0x0A, 0x46, 0x72, 0x6F, 0x6D, 0x3A, 0x20, 0x73, 0x69, 0x70, 0x3A,
			0x24, 0x7B, 0x52, 0x41, 0x4E, 0x44, 0x5F, 0x41, 0x4C, 0x50, 0x48, 0x41,
			0x3D, 0x38, 0x7D, 0x40, 0x24, 0x7B, 0x53, 0x41, 0x44, 0x44, 0x52, 0x7D,
			0x3A, 0x24, 0x7B, 0x53, 0x50, 0x4F, 0x52, 0x54, 0x7D, 0x3B, 0x74, 0x61,
			0x67, 0x3D, 0x24, 0x7B, 0x52, 0x41, 0x4E, 0x44, 0x5F, 0x44, 0x49, 0x47,
			0x49, 0x54, 0x3D, 0x38, 0x7D, 0x0D, 0x0A, 0x54, 0x6F, 0x3A, 0x20, 0x73,
			0x69, 0x70, 0x3A, 0x24, 0x7B, 0x52, 0x41, 0x4E, 0x44, 0x5F, 0x41, 0x4C,
			0x50, 0x48, 0x41, 0x3D, 0x38, 0x7D, 0x40, 0x24, 0x7B, 0x44, 0x41, 0x44,
			0x44, 0x52, 0x7D, 0x0D, 0x0A, 0x43, 0x61, 0x6C, 0x6C, 0x2D, 0x49, 0x44,
			0x3A, 0x20, 0x24, 0x7B, 0x52, 0x41, 0x4E, 0x44, 0x5F, 0x44, 0x49, 0x47,
			0x49, 0x54, 0x3D, 0x31, 0x30, 0x7D, 0x40, 0x24, 0x7B, 0x53, 0x41, 0x44,
			0x44, 0x52, 0x7D, 0x0D, 0x0A, 0x43, 0x53, 0x65, 0x71, 0x3A, 0x20, 0x31,
			0x20, 0x4F, 0x50, 0x54, 0x49, 0x4F, 0x4E, 0x53, 0x0D, 0x0A, 0x43, 0x6F,
			0x6E, 0x74, 0x61, 0x63, 0x74, 0x3A, 0x20, 0x73, 0x69, 0x70, 0x3A, 0x24,
			0x7B, 0x52, 0x41, 0x4E, 0x44, 0x5F, 0x41, 0x4C, 0x50, 0x48, 0x41, 0x3D,
			0x38, 0x7D, 0x40, 0x24, 0x7B, 0x53, 0x41, 0x44, 0x44, 0x52, 0x7D, 0x3A,
			0x24, 0x7B, 0x53, 0x50, 0x4F, 0x52, 0x54, 0x7D, 0x0D, 0x0A, 0x43, 0x6F,
			0x6E, 0x74, 0x65, 0x6E, 0x74, 0x2D, 0x4C, 0x65, 0x6E, 0x67, 0x74, 0x68,
			0x3A, 0x20, 0x30, 0x0D, 0x0A, 0x4D, 0x61, 0x78, 0x2D, 0x46, 0x6F, 0x72,
			0x77, 0x61, 0x72, 0x64, 0x73, 0x3A, 0x20, 0x32, 0x30, 0x0D, 0x0A, 0x55,
			0x73, 0x65, 0x72, 0x2D, 0x41, 0x67, 0x65, 0x6E, 0x74, 0x3A, 0x20, 0x24,
			0x7B, 0x52, 0x41, 0x4E, 0x44, 0x5F, 0x41, 0x4C, 0x50, 0x48, 0x41, 0x3D,
			0x38, 0x7D, 0x0D, 0x0A, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x3A, 0x20,
			0x74, 0x65, 0x78, 0x74, 0x2F, 0x70, 0x6C, 0x61, 0x69, 0x6E, 0x0D, 0x0A,
			0x0D, 0x0A,
		},
	},

	"ssdp": {
		Port: 1900,
		Data: []byte{
			0x4D, 0x2D, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x20, 0x2A, 0x20, 0x48,
			0x54, 0x54, 0x50, 0x2F, 0x31, 0x2E, 0x31, 0x0D, 0x0A, 0x48, 0x4F, 0x53,
			0x54, 0x3A, 0x32, 0x33, 0x39, 0x2E, 0x32, 0x35, 0x35, 0x2E, 0x32, 0x35,
			0x35, 0x2E, 0x32, 0x35, 0x30, 0x3A, 0x31, 0x39, 0x30, 0x30, 0x0D, 0x0A,
			0x53, 0x54, 0x3A, 0x73, 0x73, 0x64, 0x70, 0x3A, 0x61, 0x6C, 0x6C, 0x0D,
			0x0A, 0x4D, 0x41, 0x4E, 0x3A, 0x22, 0x73, 0x73, 0x64, 0x70, 0x3A, 0x64,
			0x69, 0x73, 0x63, 0x6F, 0x76, 0x65, 0x72, 0x22, 0x0D, 0x0A, 0x0D, 0x0A,
		},
	},

	"start_of_heading": {
		Port: 0,
		Data: []byte{
			0x01,
		},
	},

	"tftp": {
		Port: 69,
		Data: []byte{
			0x00, 0x01, 0x2F, 0x61, 0x00, 0x6E, 0x65, 0x74, 0x61, 0x73, 0x63, 0x69,
			0x69, 0x00,
		},
	},

	"ubiquiti": {
		Port: 10001,
		Data: []byte{
			0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x1F, 0x7F, 0xA3, 0x66,
		},
	},

	"ubiquiti_disco_v1": {
		Port: 10001,
		Data: []byte{
			0x01, 0x00, 0x00, 0x00,
		},
	},

	"ubiquiti_disco_v2": {
		Port: 10001,
		Data: []byte{
			0x02, 0x08, 0x00, 0x00,
		},
	},

	"upnp": {
		Port: 1900,
		Data: []byte{
			0x4D, 0x2D, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x20, 0x2A, 0x20, 0x48,
			0x54, 0x54, 0x50, 0x2F, 0x31, 0x2E, 0x31, 0x0D, 0x0A, 0x48, 0x6F, 0x73,
			0x74, 0x3A, 0x32, 0x33, 0x39, 0x2E, 0x32, 0x35, 0x35, 0x2E, 0x32, 0x35,
			0x35, 0x2E, 0x32, 0x35, 0x30, 0x3A, 0x31, 0x39, 0x30, 0x30, 0x0D, 0x0A,
			0x53, 0x54, 0x3A, 0x75, 0x70, 0x6E, 0x70, 0x3A, 0x72, 0x6F, 0x6F, 0x74,
			0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x0D, 0x0A, 0x4D, 0x61, 0x6E, 0x3A,
			0x22, 0x73, 0x73, 0x64, 0x70, 0x3A, 0x64, 0x69, 0x73, 0x63, 0x6F, 0x76,
			0x65, 0x72, 0x22, 0x0D, 0x0A, 0x4D, 0x58, 0x3A, 0x33, 0x0D, 0x0A, 0x0D,
			0x0A, 0x0D, 0x0A,
		},
	},

	"valve": {
		Port: 27015,
		Data: []byte{
			0xFF, 0xFF, 0xFF, 0xFF, 0x54, 0x53, 0x6F, 0x75, 0x72, 0x63, 0x65, 0x20,
			0x45, 0x6E, 0x67, 0x69, 0x6E, 0x65, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79,
			0x00,
		},
	},

	"wdbrpc": {
		Port: 17185,
		Data: []byte{
			0x1A, 0x09, 0xFA, 0xBA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
			0x55, 0x55, 0x55, 0x55, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x55, 0x12, 0x00, 0x00, 0x00, 0x3C,
			0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x00, 0x00,
		},
	},

	"wsd": {
		Port: 3702,
		Data: []byte{
			0x3C, 0x3F, 0x78, 0x6D, 0x6C, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6F,
			0x6E, 0x3D, 0x22, 0x31, 0x2E, 0x30, 0x22, 0x20, 0x65, 0x6E, 0x63, 0x6F,
			0x64, 0x69, 0x6E, 0x67, 0x3D, 0x22, 0x75, 0x74, 0x66, 0x2D, 0x38, 0x22,
			0x3F, 0x3E, 0x0A, 0x3C, 0x73, 0x6F, 0x61, 0x70, 0x3A, 0x45, 0x6E, 0x76,
			0x65, 0x6C, 0x6F, 0x70, 0x65, 0x20, 0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A,
			0x73, 0x6F, 0x61, 0x70, 0x3D, 0x22, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F,
			0x2F, 0x77, 0x77, 0x77, 0x2E, 0x77, 0x33, 0x2E, 0x6F, 0x72, 0x67, 0x2F,
			0x32, 0x30, 0x30, 0x33, 0x2F, 0x30, 0x35, 0x2F, 0x73, 0x6F, 0x61, 0x70,
			0x2D, 0x65, 0x6E, 0x76, 0x65, 0x6C, 0x6F, 0x70, 0x65, 0x22, 0x20, 0x78,
			0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x77, 0x73, 0x61, 0x3D, 0x22, 0x68, 0x74,
			0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x73,
			0x2E, 0x78, 0x6D, 0x6C, 0x73, 0x6F, 0x61, 0x70, 0x2E, 0x6F, 0x72, 0x67,
			0x2F, 0x77, 0x73, 0x2F, 0x32, 0x30, 0x30, 0x34, 0x2F, 0x30, 0x38, 0x2F,
			0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6E, 0x67, 0x22, 0x20,
			0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x77, 0x73, 0x64, 0x3D, 0x22, 0x68,
			0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61,
			0x73, 0x2E, 0x78, 0x6D, 0x6C, 0x73, 0x6F, 0x61, 0x70, 0x2E, 0x6F, 0x72,
			0x67, 0x2F, 0x77, 0x73, 0x2F, 0x32, 0x30, 0x30, 0x35, 0x2F, 0x30, 0x34,
			0x2F, 0x64, 0x69, 0x73, 0x63, 0x6F, 0x76, 0x65, 0x72, 0x79, 0x22, 0x20,
			0x78, 0x6D, 0x6C, 0x6E, 0x73, 0x3A, 0x77, 0x73, 0x64, 0x70, 0x3D, 0x22,
			0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x73, 0x63, 0x68, 0x65, 0x6D,
			0x61, 0x73, 0x2E, 0x78, 0x6D, 0x6C, 0x73, 0x6F, 0x61, 0x70, 0x2E, 0x6F,
			0x72, 0x67, 0x2F, 0x77, 0x73, 0x2F, 0x32, 0x30, 0x30, 0x36, 0x2F, 0x30,
			0x32, 0x2F, 0x64, 0x65, 0x76, 0x70, 0x72, 0x6F, 0x66, 0x22, 0x3E, 0x0A,
			0x3C, 0x73, 0x6F, 0x61, 0x70, 0x3A, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
			0x3E, 0x3C, 0x77, 0x73, 0x61, 0x3A, 0x54, 0x6F, 0x3E, 0x75, 0x72, 0x6E,
			0x3A, 0x73, 0x63, 0x68, 0x65, 0x6D, 0x61, 0x73, 0x2D, 0x78, 0x6D, 0x6C,
			0x73, 0x6F, 0x61, 0x70, 0x2D, 0x6F, 0x72, 0x67, 0x3A, 0x77, 0x73, 0x3A,
			0x32, 0x30, 0x30, 0x35, 0x3A, 0x30, 0x34, 0x3A, 0x64, 0x69, 0x73, 0x63,
			0x6F, 0x76, 0x65, 0x72, 0x79, 0x3C, 0x2F, 0x77, 0x73, 0x61, 0x3A, 0x54,
			0x6F, 0x3E, 0x3C, 0x77, 0x73, 0x61, 0x3A, 0x41, 0x63, 0x74, 0x69, 0x6F,
			0x6E, 0x3E, 0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x73, 0x63, 0x68,
			0x65, 0x6D, 0x61, 0x73, 0x2E, 0x78, 0x6D, 0x6C, 0x73, 0x6F, 0x61, 0x70,
			0x2E, 0x6F, 0x72, 0x67, 0x2F, 0x77, 0x73, 0x2F, 0x32, 0x30, 0x30, 0x35,
			0x2F, 0x30, 0x34, 0x2F, 0x64, 0x69, 0x73, 0x63, 0x6F, 0x76, 0x65, 0x72,
			0x79, 0x2F, 0x50, 0x72, 0x6F, 0x62, 0x65, 0x3C, 0x2F, 0x77, 0x73, 0x61,
			0x3A, 0x41, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x3E, 0x3C, 0x77, 0x73, 0x61,
			0x3A, 0x4D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x3E, 0x75,
			0x72, 0x6E, 0x3A, 0x75, 0x75, 0x69, 0x64, 0x3A, 0x63, 0x65, 0x30, 0x34,
			0x64, 0x61, 0x64, 0x30, 0x2D, 0x35, 0x64, 0x32, 0x63, 0x2D, 0x34, 0x30,
			0x32, 0x36, 0x2D, 0x39, 0x31, 0x34, 0x36, 0x2D, 0x31, 0x61, 0x61, 0x62,
			0x66, 0x63, 0x31, 0x65, 0x34, 0x31, 0x31, 0x31, 0x3C, 0x2F, 0x77, 0x73,
			0x61, 0x3A, 0x4D, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x44, 0x3E,
			0x3C, 0x2F, 0x73, 0x6F, 0x61, 0x70, 0x3A, 0x48, 0x65, 0x61, 0x64, 0x65,
			0x72, 0x3E, 0x3C, 0x73, 0x6F, 0x61, 0x70, 0x3A, 0x42, 0x6F, 0x64, 0x79,
			0x3E, 0x3C, 0x77, 0x73, 0x64, 0x3A, 0x50, 0x72, 0x6F, 0x62, 0x65, 0x3E,
			0x3C, 0x77, 0x73, 0x64, 0x3A, 0x54, 0x79, 0x70, 0x65, 0x73, 0x3E, 0x77,
			0x73, 0x64, 0x70, 0x3A, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x3C, 0x2F,
			0x77, 0x73, 0x64, 0x3A, 0x54, 0x79, 0x70, 0x65, 0x73, 0x3E, 0x3C, 0x2F,
			0x77, 0x73, 0x64, 0x3A, 0x50, 0x72, 0x6F, 0x62, 0x65, 0x3E, 0x3C, 0x2F,
			0x73, 0x6F, 0x61, 0x70, 0x3A, 0x42, 0x6F, 0x64, 0x79, 0x3E, 0x3C, 0x2F,
			0x73, 0x6F, 0x61, 0x70, 0x3A, 0x45, 0x6E, 0x76, 0x65, 0x6C, 0x6F, 0x70,
			0x65, 0x3E, 0x0A,
		},
	},

	"wsd_malformed": {
		Port: 3702,
		Data: []byte{
			0x3C, 0x3A, 0x2F, 0x3E, 0x0A,
		},
	},

	"xdcmp": {
		Port: 177,
		Data: []byte{
			0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00,
		},
	},

	"openvpn": {
		Port: 1194,
		Data: []byte{
			0x38, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x12, 0x00, 0x00, 0x00,
			0x00, 0x00, 0x38, 0xB1, 0x26, 0xDE,
		},
	},
}
